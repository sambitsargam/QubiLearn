{
  "contractName": "QubicToken",
  "contractType": "Token",
  "variables": [
    { "type": "uint64_t", "name": "totalSupply" },
    { "type": "map<PublicKey, uint64_t>", "name": "balances" },
    { "type": "string", "name": "name" },
    { "type": "string", "name": "symbol" },
    { "type": "uint8_t", "name": "decimals" }
  ],
  "functions": [
    {
      "name": "transfer",
      "params": [
        { "type": "PublicKey", "name": "to" },
        { "type": "uint64_t", "name": "amount" }
      ],
      "body": "PublicKey from = getOrigin(); if (balances[from] < amount) return false; balances[from] -= amount; balances[to] += amount; return true;",
      "returnType": "bool"
    },
    {
      "name": "balanceOf",
      "params": [
        { "type": "PublicKey", "name": "account" }
      ],
      "body": "auto it = balances.find(account); return it != balances.end() ? it->second : 0;",
      "returnType": "uint64_t"
    },
    {
      "name": "mint",
      "params": [
        { "type": "PublicKey", "name": "to" },
        { "type": "uint64_t", "name": "amount" }
      ],
      "body": "balances[to] += amount; totalSupply += amount; return true;",
      "returnType": "bool"
    }
  ],
  "constructor": {
    "params": [
      { "type": "string", "name": "_name" },
      { "type": "string", "name": "_symbol" },
      { "type": "uint64_t", "name": "_totalSupply" }
    ],
    "body": "name = _name; symbol = _symbol; totalSupply = _totalSupply; balances[getOrigin()] = _totalSupply;"
  }
}